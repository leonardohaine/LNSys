/*
 * Caixa.java
 *
 * Created on 23 de Agosto de 2009, 23:59
 */

package Tela;


import LN.entity.Materiais;
import Util.HibernateUtil;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author  Administrador
 */
public class ConfirmaSaida extends javax.swing.JDialog {

    
    public static int qtdVenda =0;
    public static int quantidade = 0;

    public static double valor = 0;
    public static double total = 0;
    public static String status;

    DecimalFormat dff = (DecimalFormat) DecimalFormat.getInstance();
    /** Creates new form Caixa */
    public ConfirmaSaida(java.awt.Frame parent, boolean modal, String cod, String desc, Double dinheiro, int qtd) throws SQLException, ClassNotFoundException {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        //this.setLocation(580, 505);
        
        //ImageIcon icone = new ImageIcon(this.getClass().getClassLoader().getResource("imagens/iconeLN.png"));
        //setIconImage(icone.getImage());
        
        jLabelRcodigo.setText(cod.toUpperCase());
        jLabelRdescricao.setText(desc);
        jLabelRvalor.setText(String.valueOf(moeda(dinheiro)));
        
        qtdVenda = qtd;
        System.out.println("vConstrutor. "+qtdVenda);
        
       jComboBoxEntradaSaida.setSelectedIndex(1);
        
        //jTextFieldQtd.selectAll();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldQtd = new javax.swing.JTextField();
        jLabelRcodigo = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabelRdescricao = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelRvalor = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldTotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jFormattedTextFieldValor = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonOk = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jComboBoxEntradaSaida = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CAIXA");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(153, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 121, 76));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ENTRADA E SAÍDA DE MATERIAIS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        jTextFieldQtd.setFont(new java.awt.Font("Arial", 1, 12));
        jTextFieldQtd.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldQtd.setText("1");
        jTextFieldQtd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQtdKeyPressed(evt);
            }
        });

        jLabelRcodigo.setFont(new java.awt.Font("Arial", 1, 12));
        jLabelRcodigo.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("DESCRIÇÃO:");

        jLabelRdescricao.setFont(new java.awt.Font("Arial", 1, 12));
        jLabelRdescricao.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("VALOR:");

        jLabelRvalor.setFont(new java.awt.Font("Arial", 1, 12));
        jLabelRvalor.setForeground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("QUANTIDADE");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("VALOR");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("TOTAL");

        jTextFieldTotal.setEditable(false);
        jTextFieldTotal.setFont(new java.awt.Font("Arial", 1, 12));
        jTextFieldTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("OPERAÇÂO");

        jFormattedTextFieldValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        jFormattedTextFieldValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedTextFieldValor.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);
        jFormattedTextFieldValor.setFont(new java.awt.Font("Arial", 1, 12));
        jFormattedTextFieldValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldValorKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CÓDIGO:");

        jButtonOk.setFont(new java.awt.Font("Arial", 1, 12));
        jButtonOk.setText("OK");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        jButtonOk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonOkKeyPressed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Arial", 1, 12));
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jComboBoxEntradaSaida.setFont(new java.awt.Font("Arial", 1, 12));
        jComboBoxEntradaSaida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECIONE", "ENTRADA", "SAÍDA" }));
        jComboBoxEntradaSaida.setNextFocusableComponent(jButtonOk);
        jComboBoxEntradaSaida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBoxEntradaSaidaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelRdescricao, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(9, 9, 9)
                        .addComponent(jLabelRcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelRvalor, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxEntradaSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonOk)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonCancelar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(jLabelRcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabelRvalor, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelRdescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jComboBoxEntradaSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jTextFieldQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOk)
                    .addComponent(jButtonCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jFormattedTextFieldValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldValorKeyPressed
     
    if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE){
       dispose();
    }
     
    if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
        if(jFormattedTextFieldValor.getText().equals("")){
            return;
        }
        //Double valor;
        double valor =0;
            try {
                valor = dff.parse(jFormattedTextFieldValor.getText()).doubleValue();
            } catch (ParseException ex) {
                Logger.getLogger(ConfirmaSaida.class.getName()).log(Level.SEVERE, null, ex);
            }
        //Double valor = Double.valueOf(jFormattedTextFieldValor.getText().replaceAll(",", "."));
        double qtd = Double.valueOf(jTextFieldQtd.getText());
        double total = qtd * valor;
        jTextFieldTotal.setText(moeda(total));
        
        System.out.println("qtd ATUAL "+qtdVenda);
        //jComboBoxEntradaSaida.setSelectedIndex(1);
        jButtonOk.requestFocus();
    }
}//GEN-LAST:event_jFormattedTextFieldValorKeyPressed

private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        try {
            valor = dff.parse(jLabelRvalor.getText()).doubleValue();
            dispose();
        } catch (ParseException ex) {
            Logger.getLogger(ConfirmaSaida.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_jButtonCancelarActionPerformed

private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        if(isNumeric(jTextFieldQtd.getText()) == false || jTextFieldQtd.equals("")){
            JOptionPane.showMessageDialog(this, "A QUANTIDADE deve conter apenas números.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldQtd.requestFocus();
            jTextFieldQtd.selectAll();
            return;  
        }else if(jFormattedTextFieldValor.getText().equals("")){
            JOptionPane.showMessageDialog(this, "O VALOR deve ser preenchido.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            jFormattedTextFieldValor.requestFocus();
            jFormattedTextFieldValor.selectAll();
            return;
        }else if(jComboBoxEntradaSaida.getSelectedItem().equals("SELECIONE")){
            JOptionPane.showMessageDialog(this, "O tipo de operação deve ser selecionada.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            jComboBoxEntradaSaida.requestFocus();
            return;
        }else if(jComboBoxEntradaSaida.getSelectedItem().equals("SELECIONE")){
            
        }
       
            String rCodigo = jLabelRcodigo.getText();
            String rDescricao = jLabelRdescricao.getText();
        try {
            Double rValor = dff.parse(jLabelRvalor.getText()).doubleValue();
        } catch (ParseException ex) {
            Logger.getLogger(ConfirmaSaida.class.getName()).log(Level.SEVERE, null, ex);
        }

            //double rValor = Double.valueOf(jLabelRvalor.getText().replaceAll(",", "."));

            int qtd = Integer.valueOf(jTextFieldQtd.getText());
            
            double valor = 0;

             try{
                valor = dff.parse(jFormattedTextFieldValor.getText()).doubleValue();
                 //double valor = Double.valueOf(jFormattedTextFieldValor.getText().replaceAll(",", "."));
             } catch (ParseException ex) {
                Logger.getLogger(ConfirmaSaida.class.getName()).log(Level.SEVERE, null, ex);
             }

            double total =0;
             try{

                 total =dff.parse(jTextFieldTotal.getText()).doubleValue();
                 //double total = Double.valueOf(jTextFieldTotal.getText().replace(".", "").replaceAll(",", "."));
            } catch (ParseException ex) {
                Logger.getLogger(ConfirmaSaida.class.getName()).log(Level.SEVERE, null, ex);
             }


            String tipo = (String) jComboBoxEntradaSaida.getSelectedItem();
            String newTipo = tipo.substring(4).trim();
            quantidade = qtd;

//            MercadoriaDAO mercadoriaDAO = new MercadoriaDAO();
//            VendaDAO vendadao = new VendaDAO();


            Session sessao = HibernateUtil.getSessionFactory().openSession();
            Transaction transacao = sessao.beginTransaction();

            if(tipo.equals("ENTRADA")){
               // vendadao.gravaVenda(rCodigo, rDescricao, qtd, negativo(valor), negativo(total), newTipo);
                qtdVenda = qtdVenda + (+qtd);
                status = "E";
                this.valor = valor;
                this.total = total;
                //mercadoriaDAO.AtualizaQtdEstoque(rCodigo, qtdVenda);
                
                JOptionPane.showMessageDialog(this, "Entrada realizada com sucesso!!!.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }else if(tipo.equals("SAÍDA")){
            
               // vendadao.gravaVenda(rCodigo, rDescricao, qtd, valor, total, newTipo);
                qtdVenda = qtdVenda - qtd;
                status = "S";
                this.valor = valor;
                this.total = total;
               // mercadoriaDAO.AtualizaQtdEstoque(rCodigo, qtdVenda);
               
                System.out.println("QTD TOTAL "+ qtdVenda + " CODIGO " + rCodigo);
                JOptionPane.showMessageDialog(this, "Saída confirmada com sucesso!!!.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
    
    
}//GEN-LAST:event_jButtonOkActionPerformed

private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
   if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_F12){
       dispose();
   }
}//GEN-LAST:event_formKeyPressed

private void jTextFieldQtdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQtdKeyPressed
    if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE){
       dispose();
   }
    
    if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
       jFormattedTextFieldValor.requestFocus();
       jFormattedTextFieldValor.setText(jLabelRvalor.getText());
       jFormattedTextFieldValor.selectAll();
   }
    
}//GEN-LAST:event_jTextFieldQtdKeyPressed

private void jComboBoxEntradaSaidaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxEntradaSaidaKeyPressed
    if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE){
       dispose();
   }
    
    if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
       jTextFieldQtd.requestFocus();
       jTextFieldQtd.selectAll();
   }
}//GEN-LAST:event_jComboBoxEntradaSaidaKeyPressed

private void jButtonOkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonOkKeyPressed
    if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE){
       dispose();
   }

    if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
        if(isNumeric(jTextFieldQtd.getText()) == false || jTextFieldQtd.equals("")){
            JOptionPane.showMessageDialog(this, "A QUANTIDADE deve conter apenas números.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            jTextFieldQtd.requestFocus();
            jTextFieldQtd.selectAll();
            return;
        }else if(jFormattedTextFieldValor.getText().equals("")){
            JOptionPane.showMessageDialog(this, "O VALOR deve ser preenchido.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            jFormattedTextFieldValor.requestFocus();
            jFormattedTextFieldValor.selectAll();
            return;
        }else if(jComboBoxEntradaSaida.getSelectedItem().equals("SELECIONE")){
            JOptionPane.showMessageDialog(this, "O tipo de operação deve ser selecionada.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            jComboBoxEntradaSaida.requestFocus();
            return;
        }else if(jComboBoxEntradaSaida.getSelectedItem().equals("SELECIONE")){

        }

            String rCodigo = jLabelRcodigo.getText();
            String rDescricao = jLabelRdescricao.getText();
            
            double rValor = 0;
            try{
               rValor = dff.parse(jLabelRvalor.getText()).doubleValue();
                //rValor = Double.valueOf(jLabelRvalor.getText().replaceAll(",", "."));
            } catch (ParseException ex) {
                Logger.getLogger(ConfirmaSaida.class.getName()).log(Level.SEVERE, null, ex);
            }

            int qtd = Integer.valueOf(jTextFieldQtd.getText());

            //double valor = Double.valueOf(jFormattedTextFieldValor.getText().replaceAll(",", "."));
            double valor = 0;
            try {
                valor = dff.parse(jFormattedTextFieldValor.getText()).doubleValue();
            } catch (ParseException ex) {
                Logger.getLogger(ConfirmaSaida.class.getName()).log(Level.SEVERE, null, ex);
            }

            double total = 0;
            try{
               total =  dff.parse(jTextFieldTotal.getText()).doubleValue();
                //total = Double.valueOf(jTextFieldTotal.getText().replace(".", "").replaceAll(",", "."));
            } catch (ParseException ex) {
                Logger.getLogger(ConfirmaSaida.class.getName()).log(Level.SEVERE, null, ex);
            }

            String tipo = (String) jComboBoxEntradaSaida.getSelectedItem();
            String newTipo = tipo.substring(4).trim();
            quantidade = qtd;

//            MercadoriaDAO mercadoriaDAO = new MercadoriaDAO();
//            VendaDAO vendadao = new VendaDAO();


            Session sessao = HibernateUtil.getSessionFactory().openSession();
            Transaction transacao = sessao.beginTransaction();

            if(tipo.equals("ENTRADA")){
               // vendadao.gravaVenda(rCodigo, rDescricao, qtd, negativo(valor), negativo(total), newTipo);
                qtdVenda = qtdVenda + (+qtd);
                status = "E";
                this.valor = valor;
                this.total = total;
                //mercadoriaDAO.AtualizaQtdEstoque(rCodigo, qtdVenda);

                JOptionPane.showMessageDialog(this, "Entrada realizada com sucesso!!!.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }else if(tipo.equals("SAÍDA")){

               // vendadao.gravaVenda(rCodigo, rDescricao, qtd, valor, total, newTipo);
                qtdVenda = qtdVenda - qtd;
                status = "S";
                this.valor = valor;
                this.total = total;
               // mercadoriaDAO.AtualizaQtdEstoque(rCodigo, qtdVenda);

                System.out.println("QTD TOTAL "+ qtdVenda + " CODIGO " + rCodigo);
                JOptionPane.showMessageDialog(this, "Saída confirmada com sucesso!!!.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }
    }

}//GEN-LAST:event_jButtonOkKeyPressed

public static double negativo(double valor){
            double newValor = valor*2;
            
            return valor-newValor;
    }

     public static String moeda(double vlr){
            java.text.DecimalFormat df = new java.text.DecimalFormat("###,###,##0.00");
            return df.format( vlr );
        }
    
     public static boolean isNumeric (String codigo) {   
    try {   
        Long.parseLong (codigo);
        System.out.println("isNumeric "+codigo);
        return true;   
    } catch (NumberFormatException ex) {
        return false;   
    }   
}   
     
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    String grupo = null;
                    String cod = null;
                    String desc = null;
                    Double dinheiro = null;
                    int qtd = 0;
                    ConfirmaSaida dialog = new ConfirmaSaida(new javax.swing.JFrame(), true, cod, desc, dinheiro, qtd);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ConfirmaSaida.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ConfirmaSaida.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JComboBox jComboBoxEntradaSaida;
    private javax.swing.JFormattedTextField jFormattedTextFieldValor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelRcodigo;
    private javax.swing.JLabel jLabelRdescricao;
    private javax.swing.JLabel jLabelRvalor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldQtd;
    private javax.swing.JTextField jTextFieldTotal;
    // End of variables declaration//GEN-END:variables

}
